name: CI

on: [push, pull_request]

jobs:
  test:
    # virtual environments: https://github.com/actions/virtual-environments
    runs-on: ubuntu-20.04

    steps:         
      # Checks-out your repository under $GITHUB_WORKSPACE, which is the CWD for
      # the rest of the steps
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}
      - uses: actions/checkout@v3
      #install neccessary tools under $GITHUB_WORKSPACE
      - name: Install tools
        run: sudo apt update && sudo apt install -y libmariadb-dev &&  sudo apt purge -y python2.7*

      - name: generate bazelrc
        env:
          BAZEL_USER: ${{ secrets.bazel_user }}
          BAZEL_PASS: ${{ secrets.bazel_pass }}
        run: |
          /bin/bash -c 'echo "run --stamp --workspace_status_command=./tools/bazel_stamp_vars.sh --remote_cache=https://$BAZEL_USER:$BAZEL_PASS@cache.anthony.bible" >> .bazelrc'
          /bin/bash -c 'echo "build --stamp --workspace_status_command=./tools/bazel_stamp_vars.sh --remote_cache=https://$BAZEL_USER:$BAZEL_PASS@cache.anthony.bible" >> .bazelrc'
      - name: Build the code
        run: bazel build //... 
      - name: Render manifests
        run: | 
          mkdir build
          git clone https://github.com/Anthony-Bible/password-exchange-deploy.git ./build
          echo "rendering k8s manifests"
          if [[ "${GITHUB_REF_TYPE}" =~ "tag" ]]; then
            bazel run //k8s:deployments-and-services --stamp --workspace_status_command=./tools/bazel_stamp_vars.sh  > ./build/prod/password-exchange.yaml 

          else
            bazel run //k8s:deployments-and-services --stamp --workspace_status_command=./tools/bazel_stamp_vars.sh  > ./build/dev/password-exchange.yaml 
          fi
          cd ./build
          pwd
          git config --local user.email "cd@password.exchange"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "Add changes" -a

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./build/password-exchange.yaml
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.git_push_token }}
          repository: "Anthony-Bible/password-exchange-deploy"
          directory: ./build

