name: CI

on: [push, pull_request]

jobs:
  test:
    # virtual environments: https://github.com/actions/virtual-environments
    runs-on: ubuntu-24.04

    steps:         
      # Checks-out your repository under $GITHUB_WORKSPACE, which is the CWD for
      # the rest of the steps
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PUSH_SECRET}}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      # Install necessary tools
      - name: Install tools
        run: sudo apt update && sudo apt install -y libmariadb-dev

      # Build the Go application
      - name: Build the code
        working-directory: ./app
        run: |
          go mod tidy
          go build -o app

      # Set version and phase variables
      - name: Set version and phase
        id: vars
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            PHASE="prod"
            VERSION="${GITHUB_REF#refs/tags/}"
          else
            PHASE="dev"
            VERSION="$(git rev-parse --short HEAD)"
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "PHASE=${PHASE}" >> $GITHUB_ENV

      # Build and push main application Docker image
      - name: Build and push main Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/anthony-bible/passwordexchange-container-${{ env.PHASE }}:${{ env.VERSION }}

      # Build and push slackbot Docker image
      - name: Build and push slackbot Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./slackbot
          file: ./slackbot/Dockerfile
          push: true
          tags: ghcr.io/anthony-bible/passwordexchange-slackbot:${{ env.VERSION }}

      # Render Kubernetes manifests
      - name: Render manifests
        run: | 
          mkdir -p build
          git clone https://github.com/Anthony-Bible/password-exchange-deploy.git ./build
          echo "rendering k8s manifests"

          # Create combined manifest file
          cat k8s/*.yaml > combined.yaml

          # Replace variables in the manifest
          sed -i "s/%{VERSION}/${VERSION}/g" combined.yaml
          sed -i "s/%{PHASE}/${PHASE}/g" combined.yaml

          # Save to appropriate directory
          if [[ "${GITHUB_REF_TYPE}" =~ "tag" ]]; then
            mkdir -p ./build/prod
            cp combined.yaml ./build/prod/password-exchange.yaml
          else
            mkdir -p ./build/dev
            cp combined.yaml ./build/dev/password-exchange.yaml
          fi

          cd ./build
          git config --local user.email "cd@password.exchange"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "Add changes" -a

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./build/password-exchange.yaml
      - name: Push changes
        uses: ad-m/github-push-action@master
        if: |
          github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
        with:
          github_token: ${{ secrets.git_push_token }}
          repository: "Anthony-Bible/password-exchange-deploy"
          directory: ./build
