<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 7.0.1 (0)
 -->
<!-- Title: app Pages: 1 -->
<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<script type="text/ecmascript"><![CDATA[
/**
 *  SVGPan library 1.2.2
 * ======================
 *
 * Given an unique existing element with id "viewport" (or when missing, the
 * first g-element), including the library into any SVG adds the following
 * capabilities:
 *
 *  - Mouse panning
 *  - Mouse zooming (using the wheel)
 *  - Object dragging
 *
 * You can configure the behaviour of the pan/zoom/drag with the variables
 * listed in the CONFIGURATION section of this file.
 *
 * Known issues:
 *
 *  - Zooming (while panning) on Safari has still some issues
 *
 * Releases:
 *
 * 1.2.2, Tue Aug 30 17:21:56 CEST 2011, Andrea Leofreddi
 *	- Fixed viewBox on root tag (#7)
 *	- Improved zoom speed (#2)
 *
 * 1.2.1, Mon Jul  4 00:33:18 CEST 2011, Andrea Leofreddi
 *	- Fixed a regression with mouse wheel (now working on Firefox 5)
 *	- Working with viewBox attribute (#4)
 *	- Added "use strict;" and fixed resulting warnings (#5)
 *	- Added configuration variables, dragging is disabled by default (#3)
 *
 * 1.2, Sat Mar 20 08:42:50 GMT 2010, Zeng Xiaohui
 *	Fixed a bug with browser mouse handler interaction
 *
 * 1.1, Wed Feb  3 17:39:33 GMT 2010, Zeng Xiaohui
 *	Updated the zoom code to support the mouse wheel on Safari/Chrome
 *
 * 1.0, Andrea Leofreddi
 *	First release
 *
 * This code is licensed under the following BSD license:
 *
 * Copyright 2009-2017 Andrea Leofreddi <a.leofreddi@vleo.net>. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 *
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. Neither the name of the copyright holder nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY COPYRIGHT HOLDERS AND CONTRIBUTORS ''AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Andrea Leofreddi.
 */

"use strict";

/// CONFIGURATION
/// ====>

var enablePan = 1; // 1 or 0: enable or disable panning (default enabled)
var enableZoom = 1; // 1 or 0: enable or disable zooming (default enabled)
var enableDrag = 0; // 1 or 0: enable or disable dragging (default disabled)
var zoomScale = 0.2; // Zoom sensitivity

/// <====
/// END OF CONFIGURATION

var root = document.documentElement;

var state = 'none', svgRoot = null, stateTarget, stateOrigin, stateTf;

setupHandlers(root);

/**
 * Register handlers
 */
function setupHandlers(root){
	setAttributes(root, {
		"onmouseup" : "handleMouseUp(evt)",
		"onmousedown" : "handleMouseDown(evt)",
		"onmousemove" : "handleMouseMove(evt)",
		//"onmouseout" : "handleMouseUp(evt)", // Decomment this to stop the pan functionality when dragging out of the SVG element
	});

	if(navigator.userAgent.toLowerCase().indexOf('webkit') >= 0)
		window.addEventListener('mousewheel', handleMouseWheel, false); // Chrome/Safari
	else
		window.addEventListener('DOMMouseScroll', handleMouseWheel, false); // Others
}

/**
 * Retrieves the root element for SVG manipulation. The element is then cached into the svgRoot global variable.
 */
function getRoot(root) {
	if(svgRoot == null) {
		var r = root.getElementById("viewport") ? root.getElementById("viewport") : root.documentElement, t = r;

		while(t != root) {
			if(t.getAttribute("viewBox")) {
				setCTM(r, t.getCTM());

				t.removeAttribute("viewBox");
			}

			t = t.parentNode;
		}

		svgRoot = r;
	}

	return svgRoot;
}

/**
 * Instance an SVGPoint object with given event coordinates.
 */
function getEventPoint(evt) {
	var p = root.createSVGPoint();

	p.x = evt.clientX;
	p.y = evt.clientY;

	return p;
}

/**
 * Sets the current transform matrix of an element.
 */
function setCTM(element, matrix) {
	var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";

	element.setAttribute("transform", s);
}

/**
 * Dumps a matrix to a string (useful for debug).
 */
function dumpMatrix(matrix) {
	var s = "[ " + matrix.a + ", " + matrix.c + ", " + matrix.e + "\n  " + matrix.b + ", " + matrix.d + ", " + matrix.f + "\n  0, 0, 1 ]";

	return s;
}

/**
 * Sets attributes of an element.
 */
function setAttributes(element, attributes){
	for (var i in attributes)
		element.setAttributeNS(null, i, attributes[i]);
}

/**
 * Handle mouse wheel event.
 */
function handleMouseWheel(evt) {
	if(!enableZoom)
		return;

	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var delta;

	if(evt.wheelDelta)
		delta = evt.wheelDelta / 360; // Chrome/Safari
	else
		delta = evt.detail / -9; // Mozilla

	var z = Math.pow(1 + zoomScale, delta);

	var g = getRoot(svgDoc);
	
	var p = getEventPoint(evt);

	p = p.matrixTransform(g.getCTM().inverse());

	// Compute new scale matrix in current mouse position
	var k = root.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);

        setCTM(g, g.getCTM().multiply(k));

	if(typeof(stateTf) == "undefined")
		stateTf = g.getCTM().inverse();

	stateTf = stateTf.multiply(k.inverse());
}

/**
 * Handle mouse move event.
 */
function handleMouseMove(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(state == 'pan' && enablePan) {
		// Pan mode
		var p = getEventPoint(evt).matrixTransform(stateTf);

		setCTM(g, stateTf.inverse().translate(p.x - stateOrigin.x, p.y - stateOrigin.y));
	} else if(state == 'drag' && enableDrag) {
		// Drag mode
		var p = getEventPoint(evt).matrixTransform(g.getCTM().inverse());

		setCTM(stateTarget, root.createSVGMatrix().translate(p.x - stateOrigin.x, p.y - stateOrigin.y).multiply(g.getCTM().inverse()).multiply(stateTarget.getCTM()));

		stateOrigin = p;
	}
}

/**
 * Handle click event.
 */
function handleMouseDown(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(
		evt.target.tagName == "svg"
		|| !enableDrag // Pan anyway when drag is disabled and the user clicked on an element
	) {
		// Pan mode
		state = 'pan';

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	} else {
		// Drag mode
		state = 'drag';

		stateTarget = evt.target;

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	}
}

/**
 * Handle mouse button release event.
 */
function handleMouseUp(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	if(state == 'pan' || state == 'drag') {
		// Quit pan mode
		state = '';
	}
}
]]></script><g id="viewport" transform="scale(0.5,0.5) translate(0,0)"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1343)">
<title>app</title>
<polygon fill="white" stroke="none" points="-4,4 -4,-1343 651,-1343 651,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_L</title>
<polygon fill="none" stroke="black" points="8,-1180 8,-1331 460,-1331 460,-1180 8,-1180"/>
</g>
<!-- File: app -->
<g id="node1" class="node">
<title>File: app</title>
<g id="a_node1"><a xlink:title="app">
<polygon fill="#f8f8f8" stroke="black" points="452,-1323 16,-1323 16,-1188 452,-1188 452,-1323"/>
<text text-anchor="start" x="24" y="-1306.2" font-family="Times,serif" font-size="16.00">File: app</text>
<text text-anchor="start" x="24" y="-1288.2" font-family="Times,serif" font-size="16.00">Type: goroutine</text>
<text text-anchor="start" x="24" y="-1270.2" font-family="Times,serif" font-size="16.00">Time: Nov 17, 2022 at 6:55am (MST)</text>
<text text-anchor="start" x="24" y="-1252.2" font-family="Times,serif" font-size="16.00">Duration: 3s, Total samples = 4 </text>
<text text-anchor="start" x="24" y="-1234.2" font-family="Times,serif" font-size="16.00">Showing nodes accounting for 2, 50.00% of 4 total</text>
<text text-anchor="start" x="24" y="-1197.2" font-family="Times,serif" font-size="16.00">See https://git.io/JfYMW for how to read the graph</text>
</a>
</g>
</g>
<!-- N1 -->
<g id="node1" class="node">
<title>N1</title>
<g id="a_node1"><a xlink:title="runtime.gopark (2)">
<polygon fill="#edd9d5" stroke="#b22100" points="631.5,-86 484.5,-86 484.5,0 631.5,0 631.5,-86"/>
<text text-anchor="middle" x="558" y="-62.8" font-family="Times,serif" font-size="24.00">runtime</text>
<text text-anchor="middle" x="558" y="-36.8" font-family="Times,serif" font-size="24.00">gopark</text>
<text text-anchor="middle" x="558" y="-10.8" font-family="Times,serif" font-size="24.00">2 (50.00%)</text>
</a>
</g>
</g>
<!-- N2 -->
<g id="node2" class="node">
<title>N2</title>
<g id="a_node2"><a xlink:title="github.com/rabbitmq/amqp091&#45;go.(*Connection).heartbeater (1)">
<polygon fill="#edddd5" stroke="#b23c00" points="647,-268 569,-268 569,-224 647,-224 647,-268"/>
<text text-anchor="middle" x="608" y="-257.6" font-family="Times,serif" font-size="8.00">amqp091&#45;go</text>
<text text-anchor="middle" x="608" y="-248.6" font-family="Times,serif" font-size="8.00">(*Connection)</text>
<text text-anchor="middle" x="608" y="-239.6" font-family="Times,serif" font-size="8.00">heartbeater</text>
<text text-anchor="middle" x="608" y="-230.6" font-family="Times,serif" font-size="8.00">0 of 1 (25.00%)</text>
</a>
</g>
</g>
<!-- N15 -->
<g id="node15" class="node">
<title>N15</title>
<g id="a_node15"><a xlink:title="runtime.selectgo (1)">
<polygon fill="#edddd5" stroke="#b23c00" points="647,-173 569,-173 569,-137 647,-137 647,-173"/>
<text text-anchor="middle" x="608" y="-162.1" font-family="Times,serif" font-size="8.00">runtime</text>
<text text-anchor="middle" x="608" y="-153.1" font-family="Times,serif" font-size="8.00">selectgo</text>
<text text-anchor="middle" x="608" y="-144.1" font-family="Times,serif" font-size="8.00">0 of 1 (25.00%)</text>
</a>
</g>
</g>
<!-- N2&#45;&gt;N15 -->
<g id="edge2" class="edge">
<title>N2&#45;&gt;N15</title>
<g id="a_edge2"><a xlink:title="github.com/rabbitmq/amqp091&#45;go.(*Connection).heartbeater &#45;&gt; runtime.selectgo (1)">
<path fill="none" stroke="#b23c00" stroke-width="2" d="M608,-223.91C608,-212.7 608,-198.73 608,-186.38"/>
<polygon fill="#b23c00" stroke="#b23c00" stroke-width="2" points="611.5,-186.38 608,-176.38 604.5,-186.38 611.5,-186.38"/>
</a>
</g>
<g id="a_edge2&#45;label"><a xlink:title="github.com/rabbitmq/amqp091&#45;go.(*Connection).heartbeater &#45;&gt; runtime.selectgo (1)">
<text text-anchor="middle" x="615" y="-194.8" font-family="Times,serif" font-size="14.00"> 1</text>
</a>
</g>
</g>
<!-- N3 -->
<g id="node3" class="node">
<title>N3</title>
<g id="a_node3"><a xlink:title="github.com/rabbitmq/amqp091&#45;go.(*Connection).reader (1)">
<polygon fill="#edddd5" stroke="#b23c00" points="548,-1277.5 470,-1277.5 470,-1233.5 548,-1233.5 548,-1277.5"/>
<text text-anchor="middle" x="509" y="-1267.1" font-family="Times,serif" font-size="8.00">amqp091&#45;go</text>
<text text-anchor="middle" x="509" y="-1258.1" font-family="Times,serif" font-size="8.00">(*Connection)</text>
<text text-anchor="middle" x="509" y="-1249.1" font-family="Times,serif" font-size="8.00">reader</text>
<text text-anchor="middle" x="509" y="-1240.1" font-family="Times,serif" font-size="8.00">0 of 1 (25.00%)</text>
</a>
</g>
</g>
<!-- N5 -->
<g id="node5" class="node">
<title>N5</title>
<g id="a_node5"><a xlink:title="github.com/rabbitmq/amqp091&#45;go.(*reader).ReadFrame (1)">
<polygon fill="#edddd5" stroke="#b23c00" points="548,-1137 470,-1137 470,-1093 548,-1093 548,-1137"/>
<text text-anchor="middle" x="509" y="-1126.6" font-family="Times,serif" font-size="8.00">amqp091&#45;go</text>
<text text-anchor="middle" x="509" y="-1117.6" font-family="Times,serif" font-size="8.00">(*reader)</text>
<text text-anchor="middle" x="509" y="-1108.6" font-family="Times,serif" font-size="8.00">ReadFrame</text>
<text text-anchor="middle" x="509" y="-1099.6" font-family="Times,serif" font-size="8.00">0 of 1 (25.00%)</text>
</a>
</g>
</g>
<!-- N3&#45;&gt;N5 -->
<g id="edge3" class="edge">
<title>N3&#45;&gt;N5</title>
<g id="a_edge3"><a xlink:title="github.com/rabbitmq/amqp091&#45;go.(*Connection).reader &#45;&gt; github.com/rabbitmq/amqp091&#45;go.(*reader).ReadFrame (1)">
<path fill="none" stroke="#b23c00" stroke-width="2" d="M509,-1233.16C509,-1211.04 509,-1176.11 509,-1150.14"/>
<polygon fill="#b23c00" stroke="#b23c00" stroke-width="2" points="512.5,-1150.16 509,-1140.16 505.5,-1150.16 512.5,-1150.16"/>
</a>
</g>
<g id="a_edge3&#45;label"><a xlink:title="github.com/rabbitmq/amqp091&#45;go.(*Connection).reader &#45;&gt; github.com/rabbitmq/amqp091&#45;go.(*reader).ReadFrame (1)">
<text text-anchor="middle" x="516" y="-1158.8" font-family="Times,serif" font-size="14.00"> 1</text>
</a>
</g>
</g>
<!-- N4 -->
<g id="node4" class="node">
<title>N4</title>
<g id="a_node4"><a xlink:title="bufio.(*Reader).Read (1)">
<polygon fill="#edddd5" stroke="#b23c00" points="548,-853 470,-853 470,-809 548,-809 548,-853"/>
<text text-anchor="middle" x="509" y="-842.6" font-family="Times,serif" font-size="8.00">bufio</text>
<text text-anchor="middle" x="509" y="-833.6" font-family="Times,serif" font-size="8.00">(*Reader)</text>
<text text-anchor="middle" x="509" y="-824.6" font-family="Times,serif" font-size="8.00">Read</text>
<text text-anchor="middle" x="509" y="-815.6" font-family="Times,serif" font-size="8.00">0 of 1 (25.00%)</text>
</a>
</g>
</g>
<!-- N12 -->
<g id="node12" class="node">
<title>N12</title>
<g id="a_node12"><a xlink:title="net.(*conn).Read (1)">
<polygon fill="#edddd5" stroke="#b23c00" points="548,-758 470,-758 470,-714 548,-714 548,-758"/>
<text text-anchor="middle" x="509" y="-747.6" font-family="Times,serif" font-size="8.00">net</text>
<text text-anchor="middle" x="509" y="-738.6" font-family="Times,serif" font-size="8.00">(*conn)</text>
<text text-anchor="middle" x="509" y="-729.6" font-family="Times,serif" font-size="8.00">Read</text>
<text text-anchor="middle" x="509" y="-720.6" font-family="Times,serif" font-size="8.00">0 of 1 (25.00%)</text>
</a>
</g>
</g>
<!-- N4&#45;&gt;N12 -->
<g id="edge1" class="edge">
<title>N4&#45;&gt;N12</title>
<g id="a_edge1"><a xlink:title="bufio.(*Reader).Read &#45;&gt; net.(*conn).Read (1)">
<path fill="none" stroke="#b23c00" stroke-width="2" d="M509,-808.9C509,-797.8 509,-783.92 509,-771.32"/>
<polygon fill="#b23c00" stroke="#b23c00" stroke-width="2" points="512.5,-771.37 509,-761.37 505.5,-771.37 512.5,-771.37"/>
</a>
</g>
<g id="a_edge1&#45;label"><a xlink:title="bufio.(*Reader).Read &#45;&gt; net.(*conn).Read (1)">
<text text-anchor="middle" x="516" y="-779.8" font-family="Times,serif" font-size="14.00"> 1</text>
</a>
</g>
</g>
<!-- N11 -->
<g id="node11" class="node">
<title>N11</title>
<g id="a_node11"><a xlink:title="io.ReadFull (1)">
<polygon fill="#edddd5" stroke="#b23c00" points="548,-1027 470,-1027 470,-991 548,-991 548,-1027"/>
<text text-anchor="middle" x="509" y="-1016.1" font-family="Times,serif" font-size="8.00">io</text>
<text text-anchor="middle" x="509" y="-1007.1" font-family="Times,serif" font-size="8.00">ReadFull</text>
<text text-anchor="middle" x="509" y="-998.1" font-family="Times,serif" font-size="8.00">0 of 1 (25.00%)</text>
</a>
</g>
</g>
<!-- N5&#45;&gt;N11 -->
<g id="edge4" class="edge">
<title>N5&#45;&gt;N11</title>
<g id="a_edge4"><a xlink:title="github.com/rabbitmq/amqp091&#45;go.(*reader).ReadFrame &#45;&gt; io.ReadFull (1)">
<path fill="none" stroke="#b23c00" stroke-width="2" d="M509,-1092.7C509,-1077.51 509,-1056.87 509,-1040.01"/>
<polygon fill="#b23c00" stroke="#b23c00" stroke-width="2" points="512.5,-1040.5 509,-1030.5 505.5,-1040.5 512.5,-1040.5"/>
</a>
</g>
<g id="a_edge4&#45;label"><a xlink:title="github.com/rabbitmq/amqp091&#45;go.(*reader).ReadFrame &#45;&gt; io.ReadFull (1)">
<text text-anchor="middle" x="536.5" y="-1063.8" font-family="Times,serif" font-size="14.00"> 1</text>
<text text-anchor="middle" x="536.5" y="-1048.8" font-family="Times,serif" font-size="14.00"> (inline)</text>
</a>
</g>
</g>
<!-- N6 -->
<g id="node6" class="node">
<title>N6</title>
<g id="a_node6"><a xlink:title="internal/poll.(*FD).Read (1)">
<polygon fill="#edddd5" stroke="#b23c00" points="548,-568 470,-568 470,-524 548,-524 548,-568"/>
<text text-anchor="middle" x="509" y="-557.6" font-family="Times,serif" font-size="8.00">poll</text>
<text text-anchor="middle" x="509" y="-548.6" font-family="Times,serif" font-size="8.00">(*FD)</text>
<text text-anchor="middle" x="509" y="-539.6" font-family="Times,serif" font-size="8.00">Read</text>
<text text-anchor="middle" x="509" y="-530.6" font-family="Times,serif" font-size="8.00">0 of 1 (25.00%)</text>
</a>
</g>
</g>
<!-- N8 -->
<g id="node8" class="node">
<title>N8</title>
<g id="a_node8"><a xlink:title="internal/poll.(*pollDesc).waitRead (1)">
<polygon fill="#edddd5" stroke="#b23c00" points="548,-458 470,-458 470,-414 548,-414 548,-458"/>
<text text-anchor="middle" x="509" y="-447.6" font-family="Times,serif" font-size="8.00">poll</text>
<text text-anchor="middle" x="509" y="-438.6" font-family="Times,serif" font-size="8.00">(*pollDesc)</text>
<text text-anchor="middle" x="509" y="-429.6" font-family="Times,serif" font-size="8.00">waitRead</text>
<text text-anchor="middle" x="509" y="-420.6" font-family="Times,serif" font-size="8.00">0 of 1 (25.00%)</text>
</a>
</g>
</g>
<!-- N6&#45;&gt;N8 -->
<g id="edge5" class="edge">
<title>N6&#45;&gt;N8</title>
<g id="a_edge5"><a xlink:title="internal/poll.(*FD).Read &#45;&gt; internal/poll.(*pollDesc).waitRead (1)">
<path fill="none" stroke="#b23c00" stroke-width="2" d="M509,-523.66C509,-508.72 509,-488.44 509,-471.25"/>
<polygon fill="#b23c00" stroke="#b23c00" stroke-width="2" points="512.5,-471.32 509,-461.32 505.5,-471.32 512.5,-471.32"/>
</a>
</g>
<g id="a_edge5&#45;label"><a xlink:title="internal/poll.(*FD).Read &#45;&gt; internal/poll.(*pollDesc).waitRead (1)">
<text text-anchor="middle" x="536.5" y="-494.8" font-family="Times,serif" font-size="14.00"> 1</text>
<text text-anchor="middle" x="536.5" y="-479.8" font-family="Times,serif" font-size="14.00"> (inline)</text>
</a>
</g>
</g>
<!-- N7 -->
<g id="node7" class="node">
<title>N7</title>
<g id="a_node7"><a xlink:title="internal/poll.(*pollDesc).wait (1)">
<polygon fill="#edddd5" stroke="#b23c00" points="548,-363 470,-363 470,-319 548,-319 548,-363"/>
<text text-anchor="middle" x="509" y="-352.6" font-family="Times,serif" font-size="8.00">poll</text>
<text text-anchor="middle" x="509" y="-343.6" font-family="Times,serif" font-size="8.00">(*pollDesc)</text>
<text text-anchor="middle" x="509" y="-334.6" font-family="Times,serif" font-size="8.00">wait</text>
<text text-anchor="middle" x="509" y="-325.6" font-family="Times,serif" font-size="8.00">0 of 1 (25.00%)</text>
</a>
</g>
</g>
<!-- N9 -->
<g id="node9" class="node">
<title>N9</title>
<g id="a_node9"><a xlink:title="internal/poll.runtime_pollWait (1)">
<polygon fill="#edddd5" stroke="#b23c00" points="551,-264 467,-264 467,-228 551,-228 551,-264"/>
<text text-anchor="middle" x="509" y="-253.1" font-family="Times,serif" font-size="8.00">poll</text>
<text text-anchor="middle" x="509" y="-244.1" font-family="Times,serif" font-size="8.00">runtime_pollWait</text>
<text text-anchor="middle" x="509" y="-235.1" font-family="Times,serif" font-size="8.00">0 of 1 (25.00%)</text>
</a>
</g>
</g>
<!-- N7&#45;&gt;N9 -->
<g id="edge6" class="edge">
<title>N7&#45;&gt;N9</title>
<g id="a_edge6"><a xlink:title="internal/poll.(*pollDesc).wait &#45;&gt; internal/poll.runtime_pollWait (1)">
<path fill="none" stroke="#b23c00" stroke-width="2" d="M509,-318.9C509,-306.52 509,-290.67 509,-277.01"/>
<polygon fill="#b23c00" stroke="#b23c00" stroke-width="2" points="512.5,-277.31 509,-267.31 505.5,-277.31 512.5,-277.31"/>
</a>
</g>
<g id="a_edge6&#45;label"><a xlink:title="internal/poll.(*pollDesc).wait &#45;&gt; internal/poll.runtime_pollWait (1)">
<text text-anchor="middle" x="516" y="-289.8" font-family="Times,serif" font-size="14.00"> 1</text>
</a>
</g>
</g>
<!-- N8&#45;&gt;N7 -->
<g id="edge7" class="edge">
<title>N8&#45;&gt;N7</title>
<g id="a_edge7"><a xlink:title="internal/poll.(*pollDesc).waitRead &#45;&gt; internal/poll.(*pollDesc).wait (1)">
<path fill="none" stroke="#b23c00" stroke-width="2" d="M509,-413.9C509,-402.8 509,-388.92 509,-376.32"/>
<polygon fill="#b23c00" stroke="#b23c00" stroke-width="2" points="512.5,-376.37 509,-366.37 505.5,-376.37 512.5,-376.37"/>
</a>
</g>
<g id="a_edge7&#45;label"><a xlink:title="internal/poll.(*pollDesc).waitRead &#45;&gt; internal/poll.(*pollDesc).wait (1)">
<text text-anchor="middle" x="516" y="-384.8" font-family="Times,serif" font-size="14.00"> 1</text>
</a>
</g>
</g>
<!-- N14 -->
<g id="node14" class="node">
<title>N14</title>
<g id="a_node14"><a xlink:title="runtime.netpollblock (1)">
<polygon fill="#edddd5" stroke="#b23c00" points="550,-173 472,-173 472,-137 550,-137 550,-173"/>
<text text-anchor="middle" x="511" y="-162.1" font-family="Times,serif" font-size="8.00">runtime</text>
<text text-anchor="middle" x="511" y="-153.1" font-family="Times,serif" font-size="8.00">netpollblock</text>
<text text-anchor="middle" x="511" y="-144.1" font-family="Times,serif" font-size="8.00">0 of 1 (25.00%)</text>
</a>
</g>
</g>
<!-- N9&#45;&gt;N14 -->
<g id="edge8" class="edge">
<title>N9&#45;&gt;N14</title>
<g id="a_edge8"><a xlink:title="internal/poll.runtime_pollWait &#45;&gt; runtime.netpollblock (1)">
<path fill="none" stroke="#b23c00" stroke-width="2" d="M509.39,-227.84C509.65,-216.1 510.01,-200.2 510.32,-186.35"/>
<polygon fill="#b23c00" stroke="#b23c00" stroke-width="2" points="513.82,-186.51 510.54,-176.44 506.82,-186.36 513.82,-186.51"/>
</a>
</g>
<g id="a_edge8&#45;label"><a xlink:title="internal/poll.runtime_pollWait &#45;&gt; runtime.netpollblock (1)">
<text text-anchor="middle" x="518" y="-194.8" font-family="Times,serif" font-size="14.00"> 1</text>
</a>
</g>
</g>
<!-- N10 -->
<g id="node10" class="node">
<title>N10</title>
<g id="a_node10"><a xlink:title="io.ReadAtLeast (1)">
<polygon fill="#edddd5" stroke="#b23c00" points="548,-940 470,-940 470,-904 548,-904 548,-940"/>
<text text-anchor="middle" x="509" y="-929.1" font-family="Times,serif" font-size="8.00">io</text>
<text text-anchor="middle" x="509" y="-920.1" font-family="Times,serif" font-size="8.00">ReadAtLeast</text>
<text text-anchor="middle" x="509" y="-911.1" font-family="Times,serif" font-size="8.00">0 of 1 (25.00%)</text>
</a>
</g>
</g>
<!-- N10&#45;&gt;N4 -->
<g id="edge9" class="edge">
<title>N10&#45;&gt;N4</title>
<g id="a_edge9"><a xlink:title="io.ReadAtLeast &#45;&gt; bufio.(*Reader).Read (1)">
<path fill="none" stroke="#b23c00" stroke-width="2" d="M509,-903.84C509,-893.12 509,-878.94 509,-866.01"/>
<polygon fill="#b23c00" stroke="#b23c00" stroke-width="2" points="512.5,-866.22 509,-856.22 505.5,-866.22 512.5,-866.22"/>
</a>
</g>
<g id="a_edge9&#45;label"><a xlink:title="io.ReadAtLeast &#45;&gt; bufio.(*Reader).Read (1)">
<text text-anchor="middle" x="516" y="-874.8" font-family="Times,serif" font-size="14.00"> 1</text>
</a>
</g>
</g>
<!-- N11&#45;&gt;N10 -->
<g id="edge10" class="edge">
<title>N11&#45;&gt;N10</title>
<g id="a_edge10"><a xlink:title="io.ReadFull &#45;&gt; io.ReadAtLeast (1)">
<path fill="none" stroke="#b23c00" stroke-width="2" d="M509,-990.8C509,-980.04 509,-965.88 509,-953.29"/>
<polygon fill="#b23c00" stroke="#b23c00" stroke-width="2" points="512.5,-953.49 509,-943.49 505.5,-953.49 512.5,-953.49"/>
</a>
</g>
<g id="a_edge10&#45;label"><a xlink:title="io.ReadFull &#45;&gt; io.ReadAtLeast (1)">
<text text-anchor="middle" x="516" y="-961.8" font-family="Times,serif" font-size="14.00"> 1</text>
</a>
</g>
</g>
<!-- N13 -->
<g id="node13" class="node">
<title>N13</title>
<g id="a_node13"><a xlink:title="net.(*netFD).Read (1)">
<polygon fill="#edddd5" stroke="#b23c00" points="548,-663 470,-663 470,-619 548,-619 548,-663"/>
<text text-anchor="middle" x="509" y="-652.6" font-family="Times,serif" font-size="8.00">net</text>
<text text-anchor="middle" x="509" y="-643.6" font-family="Times,serif" font-size="8.00">(*netFD)</text>
<text text-anchor="middle" x="509" y="-634.6" font-family="Times,serif" font-size="8.00">Read</text>
<text text-anchor="middle" x="509" y="-625.6" font-family="Times,serif" font-size="8.00">0 of 1 (25.00%)</text>
</a>
</g>
</g>
<!-- N12&#45;&gt;N13 -->
<g id="edge11" class="edge">
<title>N12&#45;&gt;N13</title>
<g id="a_edge11"><a xlink:title="net.(*conn).Read &#45;&gt; net.(*netFD).Read (1)">
<path fill="none" stroke="#b23c00" stroke-width="2" d="M509,-713.9C509,-702.8 509,-688.92 509,-676.32"/>
<polygon fill="#b23c00" stroke="#b23c00" stroke-width="2" points="512.5,-676.37 509,-666.37 505.5,-676.37 512.5,-676.37"/>
</a>
</g>
<g id="a_edge11&#45;label"><a xlink:title="net.(*conn).Read &#45;&gt; net.(*netFD).Read (1)">
<text text-anchor="middle" x="516" y="-684.8" font-family="Times,serif" font-size="14.00"> 1</text>
</a>
</g>
</g>
<!-- N13&#45;&gt;N6 -->
<g id="edge12" class="edge">
<title>N13&#45;&gt;N6</title>
<g id="a_edge12"><a xlink:title="net.(*netFD).Read &#45;&gt; internal/poll.(*FD).Read (1)">
<path fill="none" stroke="#b23c00" stroke-width="2" d="M509,-618.9C509,-607.8 509,-593.92 509,-581.32"/>
<polygon fill="#b23c00" stroke="#b23c00" stroke-width="2" points="512.5,-581.37 509,-571.37 505.5,-581.37 512.5,-581.37"/>
</a>
</g>
<g id="a_edge12&#45;label"><a xlink:title="net.(*netFD).Read &#45;&gt; internal/poll.(*FD).Read (1)">
<text text-anchor="middle" x="516" y="-589.8" font-family="Times,serif" font-size="14.00"> 1</text>
</a>
</g>
</g>
<!-- N14&#45;&gt;N1 -->
<g id="edge13" class="edge">
<title>N14&#45;&gt;N1</title>
<g id="a_edge13"><a xlink:title="runtime.netpollblock &#45;&gt; runtime.gopark (1)">
<path fill="none" stroke="#b23c00" stroke-width="2" d="M518.34,-136.81C522.86,-126.24 528.92,-112.05 534.95,-97.95"/>
<polygon fill="#b23c00" stroke="#b23c00" stroke-width="2" points="538.06,-99.57 538.77,-89 531.63,-96.82 538.06,-99.57"/>
</a>
</g>
<g id="a_edge13&#45;label"><a xlink:title="runtime.netpollblock &#45;&gt; runtime.gopark (1)">
<text text-anchor="middle" x="539" y="-107.8" font-family="Times,serif" font-size="14.00"> 1</text>
</a>
</g>
</g>
<!-- N15&#45;&gt;N1 -->
<g id="edge14" class="edge">
<title>N15&#45;&gt;N1</title>
<g id="a_edge14"><a xlink:title="runtime.selectgo &#45;&gt; runtime.gopark (1)">
<path fill="none" stroke="#b23c00" stroke-width="2" d="M600.19,-136.81C595.38,-126.24 588.93,-112.05 582.52,-97.95"/>
<polygon fill="#b23c00" stroke="#b23c00" stroke-width="2" points="585.77,-96.63 578.44,-88.97 579.39,-99.52 585.77,-96.63"/>
</a>
</g>
<g id="a_edge14&#45;label"><a xlink:title="runtime.selectgo &#45;&gt; runtime.gopark (1)">
<text text-anchor="middle" x="598" y="-107.8" font-family="Times,serif" font-size="14.00"> 1</text>
</a>
</g>
</g>
</g>
</g></svg>
