apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: passwordexchange
  name: passwordexchange-%{PHASE}-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: passwordexchange
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
        proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
      labels:
        app: passwordexchange
        name: passwordexchange
        phase: "%{PHASE}"
        version: "%{VERSION}" 
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: In
                values: ["true"]
          - weight: 50
            preference:
              matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values: ["amd64"]
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: ["passwordexchange"]
              topologyKey: kubernetes.io/hostname
      containers:
      - envFrom:
        - secretRef:
            name: test-secret
        image: ghcr.io/anthony-bible/passwordexchange-container-%{PHASE}@%{MAIN_IMAGE_SHA}
        args: ["web"]
        env:
        - name: "PASSWORDEXCHANGE_RUNNINGENVIRONMENT"
          value: "%{PHASE}"
        name: password-exchange
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        # Health checks for API endpoints
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        # Resource limits
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "512Mi"
            cpu: "500m"






