# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: encryption.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import encryption_pb2


class messageServiceBase(abc.ABC):

    @abc.abstractmethod
    async def encryptMessage(self, stream: 'grpclib.server.Stream[encryption_pb2.EncryptedMessageRequest, encryption_pb2.EncryptedMessageResponse]') -> None:
        pass

    @abc.abstractmethod
    async def DecryptMessage(self, stream: 'grpclib.server.Stream[encryption_pb2.DecryptedMessageRequest, encryption_pb2.DecryptedMessageResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GenerateRandomString(self, stream: 'grpclib.server.Stream[encryption_pb2.Randomrequest, encryption_pb2.Randomresponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/encryptionpb.messageService/encryptMessage': grpclib.const.Handler(
                self.encryptMessage,
                grpclib.const.Cardinality.UNARY_UNARY,
                encryption_pb2.EncryptedMessageRequest,
                encryption_pb2.EncryptedMessageResponse,
            ),
            '/encryptionpb.messageService/DecryptMessage': grpclib.const.Handler(
                self.DecryptMessage,
                grpclib.const.Cardinality.UNARY_UNARY,
                encryption_pb2.DecryptedMessageRequest,
                encryption_pb2.DecryptedMessageResponse,
            ),
            '/encryptionpb.messageService/GenerateRandomString': grpclib.const.Handler(
                self.GenerateRandomString,
                grpclib.const.Cardinality.UNARY_UNARY,
                encryption_pb2.Randomrequest,
                encryption_pb2.Randomresponse,
            ),
        }


class messageServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.encryptMessage = grpclib.client.UnaryUnaryMethod(
            channel,
            '/encryptionpb.messageService/encryptMessage',
            encryption_pb2.EncryptedMessageRequest,
            encryption_pb2.EncryptedMessageResponse,
        )
        self.DecryptMessage = grpclib.client.UnaryUnaryMethod(
            channel,
            '/encryptionpb.messageService/DecryptMessage',
            encryption_pb2.DecryptedMessageRequest,
            encryption_pb2.DecryptedMessageResponse,
        )
        self.GenerateRandomString = grpclib.client.UnaryUnaryMethod(
            channel,
            '/encryptionpb.messageService/GenerateRandomString',
            encryption_pb2.Randomrequest,
            encryption_pb2.Randomresponse,
        )
